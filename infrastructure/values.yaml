#see charts in requirements
alfresco-identity-service:
  keycloak:
    enabled: true
    keycloak:
      username: admin
      password: admin
      persistence:
        deployPostgres: false
        dbVendor: H2
      ingress:
        enabled: false
        proxyBufferSize: "16k"
#        hosts:
#          - "activiti-keycloak.REPLACEME"
#        annotations:
#          kubernetes.io/ingress.class: nginx
#          nginx.ingress.kubernetes.io/rewrite-target: /
#          nginx.ingress.kubernetes.io/configuration-snippet: |
#            more_set_headers 'Access-Control-Allow-Methods: "POST, GET, OPTIONS, PUT, PATCH, DELETE"';
#            more_set_headers 'Access-Control-Allow-Credentials: true';
#            more_set_headers 'Access-Control-Allow-Headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,authorization"';
#            more_set_headers 'Access-Control-Allow-Origin: $http_origin';
#          nginx.ingress.kubernetes.io/proxy-buffer-size: "16k"
      livenessProbe:
        initialDelaySeconds: 140
      extraVolumes: |
        - name: realm-secret
          secret:
            secretName: {{ .Release.Name }}-realm-secret
      extraVolumeMounts: |
        - name: realm-secret
          mountPath: "/realm/"
          readOnly: true
      extraArgs: -Dkeycloak.import=activiti-realm.json
      preStartScript: |
        /opt/jboss/keycloak/bin/add-user.sh -u admin -p admin
        /opt/jboss/keycloak/bin/add-user-keycloak.sh -r master -u admin -p admin
        cp /realm/activiti-realm.json .
#extensions to the activiti base realm
  realm:
    alfresco:
      extraRealmRoles:
       - name: "ACTIVITI_USER"
       - name: "ACTIVITI_MODELER"
       - name: "ACTIVITI_ADMIN"
      extraGroups:
        - name: "hr"
        - name: "testgroup"
      extraUsers:
        - username: client
          enabled: true
          firstName: "client"
          lastName: User
          email: "client@test.com"
          credentials:
          - type: password
            value: client
          realmRoles:
            - "offline_access"
            - "uma_authorization"
            - "ACTIVITI_USER"
          clientRoles:
            account:
              - "manage-account"
              - "view-profile"
        - username: modeler
          enabled: true
          firstName: "modeler"
          lastName: User
          email: "modeler@test.com"
          credentials:
          - type: password
            value: password
          realmRoles:
            - "offline_access"
            - "uma_authorization"
            - "ACTIVITI_MODELER"
          clientRoles:
            account:
              - "manage-account"
              - "view-profile"
        - username: hruser
          enabled: true
          firstName: "hruser"
          lastName: hruser
          email: "hruser@test.com"
          credentials:
          - type: password
            value: password
          realmRoles:
            - "offline_access"
            - "uma_authorization"
            - "ACTIVITI_USER"
          clientRoles:
            account:
              - "manage-account"
              - "view-profile"
          groups:
            - "hr"
        - username: hradmin
          enabled: true
          firstName: "hradmin"
          lastName: hradmin
          email: "hradmin@test.com"
          credentials:
          - type: password
            value: password
          realmRoles:
            - "offline_access"
            - "uma_authorization"
            - "ACTIVITI_USER"
            - "ACTIVITI_ADMIN"
          clientRoles:
            account:
              - "manage-account"
              - "view-profile"
          groups:
            - "hr"
        - username: testuser
          enabled: true
          firstName: "testuser"
          lastName: testuser
          email: "testuser@test.com"
          credentials:
          - type: password
            value: password
          realmRoles:
            - "offline_access"
            - "uma_authorization"
            - "ACTIVITI_USER"
          clientRoles:
            account:
              - "manage-account"
              - "view-profile"
          groups:
            - "testgroup"
        - username: testadmin
          enabled: true
          firstName: "testadmin"
          lastName: testadmin
          email: "testadmin@test.com"
          credentials:
          - type: password
            value: password
          realmRoles:
            - "offline_access"
            - "uma_authorization"
            - "ACTIVITI_USER"
            - "ACTIVITI_ADMIN"
          clientRoles:
            account:
              - "manage-account"
              - "view-profile"
          groups:
            - "testgroup"
      webOrigins:
        - "*"
      redirectUris:
        - "*"