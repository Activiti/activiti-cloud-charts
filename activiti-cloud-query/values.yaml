# Default values for Maven projects.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1

global:
  rabbitmq:
    host:
      value: ""
    username:
      value: guest
    password:
      value: guest
  keycloak:
    url: ""
    name: keycloak
    service:
      type: http
      port: 80

db:
  uri: ""
  name: querypostgresql
  password: query
  deployPostgres: false
  port: 5432
  generateDdl: true
  ddlAuto: update

javaOpts:
  xmx: 2048m
  xms: 1024m
  other: -XX:+UnlockExperimentalVMOptions -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90

querypostgresql:
   postgresPassword: query

## Allows the specification of additional environment variables
extraEnv: |
  # - name: ACT_KEYCLOAK_URL
  #   valueFrom:
  #     configMapKeyRef:
  #       name: {{ .Release.Name }}-keycloak-http
  #       key: expose-keycloak-service-key

# only set this variable if a private registry secret is needed to pull the image
#registryPullSecrets: private-registry-secret
image:
  repository: activiti/activiti-cloud-query
  tag: 7.0.0.RC1
  pullPolicy: IfNotPresent
service:
  name: query
  type: ClusterIP
  externalPort: 80
  internalPort: 8080
  annotations:
    fabric8.io/expose: "false"
    fabric8.io/ingress.annotations: "kubernetes.io/ingress.class: nginx"
resources:
  limits:
    cpu: 1
    memory: 2048Mi
  requests:
    cpu: 800m
    memory: 1024Mi
probePath: /actuator/health
livenessProbe:
  initialDelaySeconds: 140
  periodSeconds: 15
  timeoutSeconds: 20
  successThreshold: 1
  failureThreshold: 40
readinessProbe:
  initialDelaySeconds: 20
  periodSeconds: 10
  timeoutSeconds: 10
  successThreshold: 1
  failureThreshold: 40
terminationGracePeriodSeconds: 20

ingress:
  ## Set to true to enable ingress record generation
  enabled: false

  ## The list of hostnames to be covered with this ingress record.
  ## Most likely this will be just one host, but in the event more hosts are needed, this is an array
  #hostName: ""

  ## Set to true to enable websockets
  ws:
    enabled: false

  path: /query

  ## Set this to true in order to enable TLS on the ingress record
  tls: false

  ## If TLS is set to true, you must declare what secret will store the key/certificate for TLS
  tlsSecret: myTlsSecret

  ## Ingress annotations done as key:value pairs
#  annotations:
#    kubernetes.io/ingress.class: nginx
#    nginx.ingress.kubernetes.io/rewrite-target: /
#    nginx.ingress.kubernetes.io/enable-cors: "true"
#    nginx.ingress.kubernetes.io/cors-allow-headers: "X-Forwarded-For, X-Forwarded-Proto, X-Forwarded-Port, X-Forwarded-Prefix,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-CSRF-Token,Access-Control-Request-Headers,Access-Control-Request-Method,accept,Keep-Alive"
#    nginx.ingress.kubernetes.io/x-forwarded-prefix: "true"
